name: VPC infrastructure deployment

# on:
#  push:
#    branches:
#      - main
on: workflow_dispatch

env:
 # verbosity setting for Terraform logs--test d
 TF_LOG: INFO
 # Credentials for deployment to AWS
 aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
 aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  iam_deployment:
    name: "Deploy VPC"
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
       working-directory: .
    
    steps:
    - name: Checkout the repository to the runner
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Test configuration of AWS CLI
      run: |
        aws --version
        aws configure list | grep region | awk '{print $2}'

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -var-file=terraform.tfvars -input=false -out=tf-plan
      continue-on-error: true

    - name: Check for Changes in Terraform Plan
      id: plan_changes
      run: echo "::set-output name=changed::$(terraform show -json tf-plan | jq '.resource_changes | length > 0')"

    - name: Terraform Apply
      run: terraform apply -var-file=terraform.tfvars -auto-approve

    - name: Store Outputs
      id: terraform_outputs
      run: echo "::set-output name=outputs::$(terraform output -json)"

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1


    - name: Clean up
      run: rm -f tf-plan
